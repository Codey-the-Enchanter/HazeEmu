	LD SP,$fffe		31 FE FF; $0000  Setup Stack
	XOR A			AF; $0003  Zero the memory from $8000-$9FFF (VRAM)
	LD HL,$9fff		21 FF 9F; $0004
Addr_0007:
	LD (HL-),A		32; $0007
	BIT 7,H			CB 7C; $0008
	JR NZ, Addr_0007	20 FB; $000a
	LD HL,$ff26		21 26 FF; $000c  Setup Audio
	LD C,$11		0E 11; $000f
	LD A,$80		3E 80; $0011 
	LD (HL-),A		32; $0013
	LD ($FF00+C),A	E2; $0014
	INC C			0C; $0015
	LD A,$f3		3E F3; $0016
	LD ($FF00+C),A	E2; $0018
	LD (HL-),A		32; $0019
	LD A,$77		3E 77; $001a
	LD (HL),A		77; $001c
	LD A,$fc		3E FC; $001d  Setup BG palette
	LD ($FF00+$47),A	E0 47; $001f
	
	LD DE,$0104		11 04 01; $0021  Convert and load logo data from cart into Video RAM
	LD HL,$8010		21 10 80; $0024
Addr_0027:
	LD A,(DE)		1A; $0027
	CALL $0095		CD 95 00; $0028
	CALL $0096		CD 96 00; $002b
	INC DE		13; $002e
	LD A,E		7B; $002f
	CP $34		FE 34; $0030
	JR NZ, Addr_0027	20 F3; $0032

	LD DE,$00d8		11 D8 00; $0034  Load 8 additional bytes into Video RAM (the tile for ®)
	LD B,$08		06 08; $0037
Addr_0039:
	LD A,(DE)		1A; $0039
	INC DE		13; $003a
	LD (HL+),A		22; $003b
	INC HL		23; $003c
	DEC B			05; $003d
	JR NZ, Addr_0039	20 F9; $003e

	LD A,$19		3E 19; $0040  Setup background tilemap
	LD ($9910),A	EA 10 99; $0042
	LD HL,$992f		21 2F 99; $0045
Addr_0048:
	LD C,$0c		0E 0C; $0048
Addr_004A:
	DEC A			3D; $004a
	JR Z, Addr_0055	28 08; $004b
	LD (HL-),A		32; $004d
	DEC C			0D; $004e
	JR NZ, Addr_004A	20 F9; $004f
	LD L,$0f		2E 0F; $0051
	JR Addr_0048	18 F3; $0053

	; === Scroll logo on screen, and play logo sound===

Addr_0055:
	LD H,A		67; $0055  Initialize scroll count, H=0
	LD A,$64		3E 64; $0056
	LD D,A		57; $0058  set loop count, D=$64
	LD ($FF00+$42),A	E0 42; $0059  Set vertical scroll register
	LD A,$91		3E 91; $005b
	LD ($FF00+$40),A	E0 40; $005d  Turn on LCD, showing Background
	INC B			04; $005f  Set B=1
Addr_0060:
	LD E,$02		1E 02; $0060
Addr_0062:
	LD C,$0c		0E 0C; $0062
Addr_0064:
	LD A,($FF00+$44)	F0 44; $0064  wait for screen frame
	CP $90		FE 90; $0066
	JR NZ, Addr_0064	20 FA; $0068
	DEC C			0D; $006a
	JR NZ, Addr_0064	20 F7; $006b
	DEC E			1D; $006d
	JR NZ, Addr_0062	20 F2; $006e

	LD C,$13		0E 13; $0070
	INC H			24; $0072  increment scroll count
	LD A,H		7C; $0073
	LD E,$83		1E 83; $0074
	CP $62		FE 62; $0076  $62 counts in, play sound #1
	JR Z, Addr_0080	28 06; $0078
	LD E,$c1		1E C1; $007a
	CP $64		FE 64; $007c
	JR NZ, Addr_0086	20 06; $007e  $64 counts in, play sound #2
Addr_0080:
	LD A,E		7B; $0080  play sound
	LD ($FF00+C),A	E2; $0081
	INC C			0C; $0082
	LD A,$87		3E 87; $0083
	LD ($FF00+C),A	E2; $0085
Addr_0086:
	LD A,($FF00+$42)	F0 42; $0086
	SUB B			90; $0088
	LD ($FF00+$42),A	E0 42; $0089  scroll logo up if B=1
	DEC D			15; $008b  
	JR NZ, Addr_0060	20 D2; $008c

	DEC B			05; $008e  set B=0 first time
	JR NZ, Addr_00E0	20 4F; $008f    ... next time, cause jump to "Nintendo Logo check"

	LD D,$20		16 20; $0091  use scrolling loop to pause
	JR Addr_0060	18 CB; $0093

	; ==== Graphic routine ====

	LD C,A		4F; $0095  "Double up" all the bits of the graphics data
	LD B,$04		06 04; $0096     and store in Video RAM
Addr_0098:
	PUSH BC		C5; $0098
	RL C			CB 11; $0099
	RLA			17; $009b
	POP BC		C1; $009c
	RL C			CB 11; $009d
	RLA			17; $009f
	DEC B			05; $00a0
	JR NZ, Addr_0098	20 F5; $00a1
	LD (HL+),A		22; $00a3
	INC HL		23; $00a4
	LD (HL+),A		22; $00a5
	INC HL		23; $00a6
	RET			C9; $00a7

Addr_00A8:
	;Nintendo Logo
	.DB $CE,$ED,$66,$66,$CC,$0D,$00,$0B,$03,$73,$00,$83,$00,$0C,$00,$0D 
	.DB $00,$08,$11,$1F,$88,$89,$00,$0E,$DC,$CC,$6E,$E6,$DD,$DD,$D9,$99 
	.DB $BB,$BB,$67,$63,$6E,$0E,$EC,$CC,$DD,$DC,$99,$9F,$BB,$B9,$33,$3E 

Addr_00D8:
	;More video data (the tile data for ®)
	.DB $3C,$42,$B9,$A5,$B9,$A5,$42,$3C

	; ===== Nintendo logo comparison routine =====

Addr_00E0:	
	LD HL,$0104		21 04 01; $00e0	; point HL to Nintendo logo in cart
	LD DE,$00a8		11 A8 00; $00e3	; point DE to Nintendo logo in DMG rom

Addr_00E6:
	LD A,(DE)		1A; $00e6
	INC DE		13; $00e7
	CP (HL)		BE; $00e8	;compare logo data in cart to DMG rom
	JR NZ,$fe		20 FE; $00e9	;if not a match, lock up here
	INC HL		23; $00eb
	LD A,L		7D; $00ec
	CP $34		FE 34; $00ed	;do this for $30 bytes
	JR NZ, Addr_00E6	20 F5; $00ef

	LD B,$19		06 19; $00f1
	LD A,B		78; $00f3
Addr_00F4:
	ADD (HL)		86; $00f4
	INC HL		23; $00f5
	DEC B			05; $00f6
	JR NZ, Addr_00F4	20 FB; $00f7
	ADD (HL)		86; $00f9
	JR NZ,$fe		20 FE; $00fa	; if $19 + bytes from $0134-$014D  don't add to $00
						;  ... lock up

	LD A,$01		3E 01; $00fc
	LD ($FF00+$50),A	E0 50; $00fe	;turn off DMG rom